{"version":3,"sources":["logo.svg","components/drawer.component.js","components/mainbody.component.js","App.js","reportWebVitals.js","index.js"],"names":["ResponsiveDrawer","props","children","React","mobileOpen","setMobileOpen","handleDrawerToggle","drawer","Toolbar","Divider","List","map","text","index","ListItemButton","onClick","ListItemText","primary","Box","sx","display","CssBaseline","AppBar","width","position","zIndex","theme","IconButton","color","edge","mr","sm","Typography","variant","noWrap","component","flexShrink","Drawer","open","onClose","ModalProps","keepMounted","xs","boxSizing","flexGrow","p","MainBody","state","information","Component","createTheme","typography","h2","fontSize","palette","main","purple","secondary","yellow","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","document","getElementById"],"mappings":"qNAAe,I,yKCwGAA,MAhGf,SAA0BC,GACtB,IAAQC,EAAaD,EAAbC,SACR,EAAoCC,YAAe,GAAnD,mBAAOC,EAAP,KAAmBC,EAAnB,KAEMC,EAAqB,WACvBD,GAAeD,IAObG,EACF,gCACI,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,UACK,CAAC,iBAAkB,aAAc,cAAe,cAAcC,KAAI,SAACC,EAAMC,GAAP,OACnE,cAACC,EAAA,EAAD,CAAgBC,QAAS,aAAzB,SACI,cAACC,EAAA,EAAD,CAAcC,QAASL,KAD8BA,WAWrE,OACI,eAACM,EAAA,EAAD,CAAKC,GAAI,CAAEC,QAAS,QAApB,UACI,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CACIH,GAAI,CACJI,MAAO,OACPC,SAAU,QACVC,OAAS,SAACC,GAAD,OAAWA,EAAMD,OAAOlB,OAAS,IAJ9C,SAOI,eAACC,EAAA,EAAD,WACI,cAACmB,EAAA,EAAD,CACIC,MAAM,UACN,aAAW,cACXC,KAAK,QACLd,QAAST,EACTa,GAAI,CAAEW,GAAI,EAAGV,QAAS,CAAEW,GAAI,SALhC,SAOI,cAAC,IAAD,MAEJ,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,QAAM,EAACC,UAAU,MAA1C,6BAKR,eAACjB,EAAA,EAAD,CACIiB,UAAU,MACVhB,GAAI,CAAEI,MAAO,CAAEQ,GA1DX,KA0D8BK,WAAY,CAAEL,GAAI,IACpD,aAAW,kBAHf,UAMI,cAACM,EAAA,EAAD,CACAJ,QAAQ,YACRK,KAAMlC,EACNmC,QAASjC,EACTkC,WAAY,CACRC,aAAa,GAEjBtB,GAAI,CACAC,QAAS,CAAEsB,GAAI,QAASX,GAAI,QAC5B,qBAAsB,CAAEY,UAAW,aAAcpB,MAvEjD,MA8DJ,SAYKhB,IAGL,cAAC8B,EAAA,EAAD,CACAJ,QAAQ,YACRd,GAAI,CACAC,QAAS,CAAEsB,GAAI,OAAQX,GAAI,SAAWK,WAAY,EAClD,qBAAsB,CAAEO,UAAW,aAAcpB,MAjFjD,MAmFJe,MAAI,EANJ,SAQK/B,OAIT,eAACW,EAAA,EAAD,CAAKiB,UAAU,OAAOhB,GAAI,CAAEyB,SAAU,EAAGC,EAAG,GAA5C,UACI,cAACrC,EAAA,EAAD,IAEEN,S,gCChGG4C,E,kDACjB,WAAY7C,GAAQ,IAAD,8BACf,cAAMA,IAED8C,MAAQ,CACTC,YAAa,QAJF,E,0CAQnB,WACI,OACI,8BACI,0D,GAZsBC,aCUxBC,YAAY,CACxBC,WAAY,CACRC,GAAI,CACFC,SAAU,KAGhBC,QAAS,CACPrC,QAAS,CACPsC,KAAMC,IAAO,MAEfC,UAAW,CACTF,KAAMG,IAAO,SAmBJC,MAdf,WACE,OACE,cAAC,EAAD,UACE,cAAC,EAAD,OCnBSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,iBACE,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.73fc7003.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import * as React from 'react';\r\nimport { IconButton, Drawer, Divider, AppBar, Box, CssBaseline,\r\n    List, ListItemButton, ListItemIcon, ListItemText, Toolbar, Typography\r\n    } from '@mui/material';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nconst drawerWidth = 240;\r\n\r\nfunction ResponsiveDrawer(props) {\r\n    const { children } = props;\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n\r\n    const handleRouting = (algName) => {\r\n        \r\n    }\r\n\r\n    const drawer = (\r\n        <div>\r\n            <Toolbar/>  \r\n            <Divider />\r\n            <List>\r\n                {['Insertion Sort', 'Merge Sort', 'Bubble Sort', 'Quick Sort'].map((text, index) => (\r\n                <ListItemButton onClick={() => handleRouting(text)} key={text}>\r\n                    <ListItemText primary={text} />\r\n\r\n                </ListItemButton>\r\n                ))}\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n\r\n\r\n    return (\r\n        <Box sx={{ display: 'flex' }}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                sx={{\r\n                width: '100%',\r\n                position: \"fixed\",\r\n                zIndex:  (theme) => theme.zIndex.drawer + 1\r\n                }}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        edge=\"start\"\r\n                        onClick={handleDrawerToggle}\r\n                        sx={{ mr: 2, display: { sm: 'none' } }}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap component=\"div\">\r\n                        Algorithms\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Box\r\n                component=\"nav\"\r\n                sx={{ width: { sm: drawerWidth }, flexShrink: { sm: 0 } }}\r\n                aria-label=\"mailbox folders\"\r\n            >\r\n                {/* ### The mobile (aka small) version of the drawer ### */}\r\n                <Drawer\r\n                variant=\"temporary\"\r\n                open={mobileOpen}\r\n                onClose={handleDrawerToggle}\r\n                ModalProps={{\r\n                    keepMounted: true, // Better open performance on mobile.\r\n                }}\r\n                sx={{\r\n                    display: { xs: 'block', sm: 'none' },\r\n                    '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth },\r\n                }}\r\n                >\r\n                    {drawer}\r\n                </Drawer>\r\n                {/* ### The desktop (aka large) version of the drawer ### */}\r\n                <Drawer\r\n                variant=\"permanent\"\r\n                sx={{\r\n                    display: { xs: 'none', sm: 'block' }, flexShrink: 0,\r\n                    '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth },\r\n                }}\r\n                open\r\n                >\r\n                    {drawer}\r\n                </Drawer>\r\n            </Box>\r\n\r\n            <Box component=\"main\" sx={{ flexGrow: 1, p: 3 }}>\r\n                <Toolbar />\r\n                \r\n                { children }\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default ResponsiveDrawer;","import { React, Component } from 'react';\r\n\r\nexport default class MainBody extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            information: 'main'\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <p>\r\n                    Hello from MainBody\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}","import logo from './logo.svg';\r\nimport \"fontsource-roboto\";\r\nimport {BrowserRouter as Router, Route} from \"react-router-dom\"\r\nimport { Menu } from '@mui/material';\r\nimport { AppBar, Container, ThemeProvider, createTheme, Button,\r\n   Typography, IconButton, Toolbar } from '@mui/material'; \r\nimport { purple, yellow } from '@mui/material/colors';\r\nimport './App.css';\r\n\r\nimport ResponsiveDrawer from \"./components/drawer.component\";\r\nimport MainBody from './components/mainbody.component';\r\n\r\nconst theme = createTheme({\r\n  typography: {\r\n      h2: {\r\n        fontSize: 36\r\n      }\r\n  },\r\n  palette: {\r\n    primary: {\r\n      main: purple[400],\r\n    },\r\n    secondary: {\r\n      main: yellow[200],\r\n    }\r\n  }\r\n})\r\n\r\nfunction App() {\r\n  return (\r\n    <ResponsiveDrawer>\r\n      <MainBody>\r\n\r\n      </MainBody>\r\n    </ResponsiveDrawer>\r\n      \r\n\r\n\r\n   \r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nrender(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}